@import '../node_modules/modern-normalize/modern-normalize.css';

/* revert focusring change made by modern-normalize */
:-moz-focusring, :focus-visible {
  outline: revert;
}
/* revert modern-normalize's line-height specification on the following form elements.
Strangely, explicitly specifying it causes height differences between the elements, and between different browsers. */
button, input, optgroup, select, textarea {
  line-height: normal;
}

legend {
  padding-left: 0.2em;
  padding-right: 0.2em;
}

body {
  --flex-gap: .5rem;
  --editor-row-padding-x: 1px;
  --valid-ind-width: 1.5rem;
  --raw-editor-width: 32%;
  --raw-editor-minwidth: 4.5em;

  /* --border-color: #5555; */
  --accent: #0087ff;
  --mid: #3A6889;
  --light: #99C4E2;
  /* --offwhite: aliceblue; */
  --offwhite: rgb(239, 245, 250);
  --dark: #08192D;
  --grayblue: #94AAC9;
  --border-color: var(--light);
  --focus-outline-color: var(--accent);
  color: var(--dark);

  /* background-color: lightcyan; */
  background-color: var(--mid);
  background-image: url('./assets/imgs/ThatOtherFish-scrots/NI-7.png');
  background-repeat: no-repeat;
  background-size: cover;
  background-position-x: center;
  background-attachment: fixed;
}

input,
button,
select,
input[type="file"]::file-selector-button {
  accent-color: var(--accent);

  /* padding-top: 2px;
  padding-bottom: 2px; */

  border: solid 1px;
  border-radius: 3px;
  border-color: rgb(118,118,118);
  
  &:disabled {
    border-color: rgb(180, 180, 180);
  }
}

button:not(:disabled),
select:not(:disabled),
input[type="file"]:not(:disabled)::file-selector-button {
  background-color: rgb(235, 235, 239);
}
button:not(:disabled):hover,
select:not(:disabled):hover,
input[type="file"]:not(:disabled)::file-selector-button:hover {
  background-color: rgb(210, 210, 214);
}

#root {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  padding: 2rem;
}

:focus {
  padding-bottom: 1px;
  outline: 2px solid var(--focus-outline-color, #0087ff);
  outline-offset: 1px;
  position: relative;
  /* z-index: 1000; */
}

div.card {
  border: 2px var(--border-color) solid;
  /* width: 100%; */
  display: block;
  border-radius: 5px;
  /* margin: 10px; */
  background-color: var(--offwhite);
  background: linear-gradient(var(--border-color), var(--offwhite) 1.28em);
}
.card-width {
  width: 85vw;
  max-width: 900px;
}
.w-100 {
  width: 100%;
}
.w-50 {
  width: 50%;
}

th, td, thead, tbody, table {
  border: 1px solid var(--mid);
}
th, td {
  padding: 2px;
}
table {
  width: 100%;
  border-collapse: collapse;
  --tablerow-bshadow-color: var(--accent);
}
table#tableManifests {
  margin-block-end: 1em;
}
.bad-save-data-container {
  width: 100%;
  overflow-x: auto;
}
table.bad-save-data-table {
  margin-top: 2px;
  margin-bottom: 2px;
  width: auto;
}
thead + tbody {
  border-top-width: 2px;
}
thead {
  border-bottom-width: 2px;
}
tbody > tr:hover {
  /* background-color: var(--grayblue);
  color: var(--offwhite); */
  box-shadow: 0px 0px 4px 1px var(--tablerow-bshadow-color) !important;
  /* bring it forward for maximal box-shadow effect */
  /* position: relative; */
}

h1 {
  /* based on browser defaults for h3 */
  font-size: 1.17em;
  font-size: 19px;
  /* margin-block-start: 1em;
  margin-block-end: 1em; */
  line-height: 1.3;
  font-weight: 700;

  margin-block-start: 0.2em;
  margin-block-end: 0.2em;
}
h2 {
  /* font-size: 1.1em; */
  font-size: 18px;
  line-height: 1.3;
  font-weight: 700;

  margin-block-start: 0.2em;
  margin-block-end: 0.2em;
}
h2 + a.details-link {
  font-size: 18px;
  margin-block-start: 0.2em;
  margin-block-end: 0.2em;
  margin-right: 0px;
  margin-left: auto;
}
h3 {
  &,
  li:has(> &:first-child)::marker {
    /* make marker have same font size as the accompanying header of the list item */
    /* font-size: 1.1em; */
    font-size: 18px;
    line-height: 1.25;
    font-weight: 700;
  }
  /* margin-block-start: 0.2em; */
  margin-block-start: 1em;
  /* margin-block-end: 0.2em; */
  margin-block-end: 1em;
}
h4 {
  &,
  li:has(> &:first-child)::marker {
    /* make marker have same font size as the accompanying header of the list item */
    /* font-size: 1.1em; */
    font-size: 17px;
    line-height: 1.25;
    font-weight: 700;
  }
  /* margin-block-start: 0.2em; */
  margin-block-start: 1em;
  /* margin-block-end: 0.2em; */
  margin-block-end: 1em;
}
div.card > h1, div.card > h2, div.card > .title-header-flex > h2 {
  padding-left: 0.4em;
  /* swap margin with padding */
  /* margin-block-start: 0;
  padding-block-start: 0.2em; */
  /* background: linear-gradient(var(--border-color), transparent 70%); */
}

.text-container {
  padding-left: .5em;
  padding-right: .5em;
  line-height: 1.2;
}

code, .mono-text {
  font-family: Monaco,Consolas,"Andale  Mono","DejaVu Sans Mono",monospace;
  /* color: black; */
  font-weight: bold;
}
.inline-code {
  color: black;
  border-radius: 3px; 
  -moz-border-radius: 3px; 
  -webkit-border-radius: 3px; 
  border: 1px solid #BCBEC0;
  padding: 2px;
  /* background-color: #BCBEC0AA; */
  background-color: #BCBEC0A0;
  font:12px Monaco,Consolas,"Andale  Mono","DejaVu Sans Mono",monospace;
  font-weight: normal;
}
/* span.highlight-exe, .highlight-exe-hover-parent:hover span.highlight-exe-hover-child { */
  /*background-color: #0087ff26;*/  /* hard-coded fallback in case color-mix is not supported */
  /* background-color: color-mix(in srgb, var(--accent) 15%, transparent); */
/* } */
.form-text {
  color: var(--mid);
  font-size: .85em;
}
.fw-normal {
  font-weight: normal;
}

body {
  --p-callout-border-left-width: 4px;
  --p-callout-padding-size: 4px;
}
p.callout {
  /* --p-callout-col: #2de; */
  /* --p-callout-bg-col: #2de3; */
  --p-callout-col: #7ef;
  --p-callout-bg-col: #7ef3;
  &.important {
    --p-callout-col: #ff0;
    --p-callout-bg-col: #ff03;
  }
  background: linear-gradient(90deg, var(--p-callout-bg-col), transparent);
  border-left: var(--p-callout-border-left-width) var(--p-callout-col) solid;
  border-radius: var(--p-callout-border-left-width);
  margin-left: calc(0px - var(--p-callout-border-left-width) - var(--p-callout-padding-size));
  padding: var(--p-callout-padding-size);
  padding-right: 0px;
}
mark.hoverable {
  border: 1px solid transparent;
  background-color: transparent;
}
td:hover > mark.hoverable,
th:hover > mark.hoverable {
  border: 1px dotted var(--accent);
  background-color: revert;
}
table.bad-save-data-table td:has(mark:empty) {
	/* min-height: 1em; */
	height: 1em;
}

input[type="checkbox"].switch {
  border-radius: 2em;
  /* border: 1px solid red; */
  appearance: none;
  -webkit-appearance: none;
  height: 1em;
  width: 2em;
  /* background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='rgba(0, 0, 0, 0.25)'/%3E%3C/svg%3E"); */
  /* background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='rgba(0, 0, 0, 0.25)'/%3E%3C/svg%3E"); */
  background-repeat: no-repeat;
  background-position: 0;
  border: 1px solid gray;
  background-color: white;
  margin-top: .25em;
  /* margin-top: 0; */
  /* vertical-align: middle; */
  margin-bottom: 0;
  /* transition: background-position .15s ease-in-out; */
  /* background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='none' stroke='%23777' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 6 8 8 m0 -8 -8 8'/%3E%3C/svg%3E"); */
  /* background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E %3Ccircle r='3' fill='rgba(0, 0, 0, 0.25)'/%3E %3Cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='1' d='m-1-1 2 2m0-2-2 2'/%3E%3C/svg%3E"); */
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E %3Ccircle r='3.3' fill='rgba(0, 0, 0, 0.25)'/%3E %3Cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='1' d='m-1-1 2 2m0-2-2 2'/%3E%3C/svg%3E");
}
input[type="checkbox"].switch.unset {
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3.3' fill='rgba(0, 0, 0, 0.25)'/%3E%3C/svg%3E");
  background-position: 50%;
}
input[type="checkbox"].switch:checked {
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3E%3C/svg%3E");
  background-color: var(--accent);
  background-position: 100%;
  /* background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 6 8 8 m0 -8 -8 8'/%3E%3C/svg%3E"); */
}
input[type="checkbox"].switch-lg {
  font-size: 1.2em;
  /* font-size: 100%; */
  margin-top: .125em;
}
input[type="color"] {
  /* making it match heights of the other nearby inputs */
  /* padding: 1px; */
  /* height: 22px; */
  padding: 2px;
  vertical-align: top;
}
input[type="color"]::-webkit-color-swatch-wrapper {
  padding: 0;
}

input[type="range"] {
  margin-top: 0;
  margin-bottom: 0;
  /* vertical-align: middle; */
}

input[type="radio"] + label {
  padding-left: 0.4rem;
}

#fileForm {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.upload-row {
  display: flex;
  gap: var(--flex-gap);
  & > button {
    flex: 1 1 50%;
  }
}
#versionSelect {
  max-width: 100%;
  width: 32em;
  width: min(32em, 100%);
}
#fileSelect {
  border: 2px dashed var(--accent);
  border-radius: 2px;
  flex: 1 1 50%;
  padding: 0.5rem;
  cursor: pointer;

  &:hover {
    background-color: var(--accent);
    color: var(--offwhite);
  }
}
/* apply some nice visual spacing around form's labels and inputs */
form > label {
  display: inline-block;
}
form > label:not(:first-child),
form > fieldset:not(:first-child) {
  margin-top: .75em;
}
form > label:not(:has(input, select), :last-child) {
  /* labels that don't have nested input children, i.e., they reference an element elsewhere (using e.g. for = "...") */
  padding-bottom: .3em;
}
form > fieldset {
  border: 1px solid var(--grayblue);
}

span.name-suffix {
  color: var(--mid);
  font-size: .95em;
}

ul, ol {
  padding-left: 30px;
}
ul.listicons {
  list-style-type: none;
  margin-left: 2.5em;
  padding-left: 0;
}
ul.listicons > li {
  position: relative;
}
span.listicons {
  left: -2em;
  position: absolute;
  text-align: center;
  width: 2em;
  line-height: inherit;
}
span.listicons:has(> .icon:nth-child(2)) {
  left: -2.5em;
  width: 2em;
}
span.listicons:has(> .icon:nth-child(3)) {
  left: -3.5em;
  width: 3em;
}

.quick-action-button {
  grid-column: auto / span 3;
}

.switch-grid {
  flex: 1 0 auto;
  display: grid;
  gap: var(--editor-row-padding-x) var(--flex-gap);
  grid-template-columns: auto auto; /* fallback if min-content not supported */
  grid-template-columns: min-content auto;
  grid-template-rows: auto;
  grid-template-areas: "header header" "switch eraser";
}

.transform-grid {
  /* flex: 1 0 auto; */
  display: grid;
  gap: var(--editor-row-padding-x) var(--flex-gap);
  grid-template-columns: auto 1fr 1fr 1fr 1fr; /* fallback if min-content not supported */
  grid-template-columns: min-content 1fr 1fr 1fr 1fr;
  grid-template-rows: auto;
  grid-template-areas:
    ". x y z w"
    "pe px py pz ."
    "re rx ry rz rw";
}
.transform-grid > .axis-label {
  text-align: center;
  padding-bottom: 1px;
}
.transform-grid > input[type="text"] {
  width: 100%;
}
.transform-part-label {
  position: absolute;
  transform: translate(calc(-100% - var(--flex-gap)), 0);
  pointer-events: none;
  display: none;
}
.transform-grid:hover .transform-part-label {
  display: block;
}

summary.title-row, summary.category-title-row {
  cursor: pointer;
  padding-left: 4px;
  --category-background: var(--grayblue);
  background: linear-gradient(5deg,transparent,var(--category-background));
  font-weight: 700;
  font-size: large;
  padding-top: 3px;
  padding-bottom: 3px;
  /* border-top: 2px var(--grayblue) solid; */
}
.title-header-flex {
  padding-right: 3px;
}
summary.title-row > .title-header-flex > span,
summary.title-row > .title-header-flex > button {
  margin-top: -3px;
}
.title-header-flex {
  display: inline-flex;
  flex-direction: row;
  width: 100%;
  & > span {
    flex: 1 1 auto;
  }
  & > .details-link {
    flex: 0 1 0;
  }
}
.details-link:hover {
  background-color: var(--offwhite);
  border-radius: 2px;
}
summary.title-row:hover {
  --category-background: var(--accent);
}
summary.category-title-row:not(:has(+ div > .editor-row)) {
  /* opacity: 0.5; */
  color: gray;
}
summary.category-title-row:has(+ .category-contents-col .validation-ind.warning),
summary.category-title-row:has(+ .category-contents-col .bad-save-data-row) {
  color: red;
}

summary::before {
  /* content: "\f285"; */
  /* float: left; */
  /* background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-chevron-right' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708'/%3E%3C/svg%3E"); */
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-caret-right-fill' viewBox='0 0 16 16'%3E%3Cpath d='m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z'/%3E%3C/svg%3E");
  width: 1em;
  height: 1em;
  display: inline-block;
}
summary::marker, summary::-webkit-details-marker {
  content: none;
}
svg.icon {
  /* vertical-align: -.125em; */
  vertical-align: -.11em;
  width: 1em;
  height: 1em;
  /* vertical-align: unset; */
  font-weight: 400;
  line-height: 1;
  overflow: visible;  /* solve pixels on edges being cut off due to subpixel positioning, etc. */
}
summary svg.category-icon {
  /* vertical-align: -.125em; */
  /* vertical-align: unset; */
  vertical-align: inherit;
  height: .8em;
}
details[open] > summary svg.category-icon {
  transform: rotate(90deg);
}

.category-contents-col {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.editor-row:hover, .editor-row:has(:focus) {
  box-shadow: 0px 0px 4px 1px var(--editor-bshadow-color) !important;
  /* bring it forward for maximal box-shadow effect */
  position: relative;
}
.editor-row:hover, .editor-row:has(:focus) {
  --editor-bshadow-color: var(--mid);
}
.bad-save-data-row:hover, .bad-save-data-row:has(:focus) {
  --editor-bshadow-color: red;
}
/* .editor-row * {
  vertical-align: top;
} */
.editor-row {
  padding-top: var(--editor-row-padding-x);
  padding-bottom: var(--editor-row-padding-x);
  display: flex;
  gap: var(--flex-gap);
}

.editor-items-container {
  /* display: inline-block; */
  flex-basis: 52%;
  flex-shrink: 0;
  display: inline-flex;
  gap: var(--flex-gap);
  align-self: flex-start;
}

.rich-editor-row {
  /* display: inline-block; */
  /* width: 50%; */
  flex-grow: 1;
  display: inline-flex;
}
/* .validation-ind.warning + .editor-items-container {
  & input:not(.raw-editor), & select {
    box-shadow: 0 0 1px 1px red;
  }
} */
.editor-row:has(.validation-ind.warning) {
  --editor-bshadow-color: red;
  box-shadow: 0 0 1px 1px var(--editor-bshadow-color);
  /* background-color: rgba(255, 0, 0, 0.05); */
}
.bad-save-data-row {
  --editor-bshadow-color: red;
  border-top: 1px solid var(--editor-bshadow-color);
  border-left: 1px solid var(--editor-bshadow-color);
  border-right: 1px solid var(--editor-bshadow-color);
  &:last-of-type {
    border-bottom: 1px solid var(--editor-bshadow-color);
  }
}
.bad-save-data-index {
  display: inline-block;
  vertical-align: middle;
}
/* .raw-editor-and-eraser-row {
  display: inline-block;
  flex: 0 0 auto;
  width: 40%;
  display: inline-flex;
  & > .raw-editor {
    width: 100%
  }
} */
.raw-editor {
  display: inline-block;
  /* width: 30%; */
  /* flex: 0 0 40%; */
  min-width: var(--raw-editor-minwidth);
  flex: 0 0 auto;
  width: var(--raw-editor-width);
  cursor: text;
}
.editor-erase-button {
  flex: 0 0 auto;
  /* aspect-ratio: 1; */
}
.list-editor-grid {
  display: inline-grid;
  row-gap: calc(2 * var(--editor-row-padding-x));
  flex-grow: 1;
}
.list-editor-grid-row {
  /* display: inline-block; */
  display: inline-flex;
  gap: var(--flex-gap);

  /* & > button {
    height: 100%;
  } */
  & > select {
    width: auto;
    flex: 1 0 auto;
  }
  & > span {
    padding-top: .125rem;
  }
  & > .raw-editor {
    /* override the width */
    width: auto;
    flex: 1 0 auto;
  }
  &.furniture-selector {
    & > select {
      width: 100%;
      flex: 1 1 auto;
    }
    & > .raw-editor {
      width: var(--raw-editor-width);
      flex: 1 0;
    }
  }
}

input[type="color"].for-color-editor {
  /* width: 5em; */
  height: auto;
  /* min-width: 30px; */
  min-width: 4.5rem;
  /* flex: 0 0 4.5rem; */
  flex: 0 0 22%;
}
input[type="text"].for-color-editor {
  /* width: calc(100% - 5em); */
  width: 100%;
  flex: 1 1 auto;
}

.propname-container {
  display: inline-block;
  /* flex-grow: 1; */
  padding-top: var(--editor-row-padding-x);
  margin-top: calc(-1 * var(--editor-row-padding-x));
  padding-bottom: var(--editor-row-padding-x);
  margin-bottom: calc(-1 * var(--editor-row-padding-x));
  flex-basis: 43%;
  overflow-x: auto;
}
/* .propname-container:hover > .propname-fullkey {
  display: block;
} */
.propname {
  vertical-align: middle;
}
.propname-note {
  vertical-align: middle;
  cursor: help;
  padding-left: 0.2em;
  padding-right: 0.2em;
}
.propname-fullkey {
  /* display: none; */
  color: #777;
  font-size: 0.9em;
  padding-bottom: .1em;
}
svg.propname-icon {
  color: #777;
}
svg.propname-icon:hover,
.propname-note:hover > svg.propname-icon {
  color: currentColor;
}

.validation-inds-container {
  display: flex;
  
  /* & > span.validation-ind:has(+ .validation-others-container) {
    transition: all 0s linear;
  } */
  &:hover > span.validation-ind:has(+ .validation-others-container) {
    width: 0;
    overflow-x: hidden;
    /* visibility: collapse; */
    /* background-color: red; */
  }
}
.validation-others-container {
  display: flex;
  width: 0;
  /* transition: all 0s linear; */
  /* display: none; */
  flex-wrap: nowrap;
  overflow-x: hidden;

  .validation-inds-container:hover > & {
    display: flex;
    width: calc(var(--valid-inds-ct, 4) * var(--valid-ind-width));
  }
}
span.validation-ind {
  display: inline-block;
  width: var(--valid-ind-width);
  text-align: center;
  /* align-self: center; */
  padding-top: .125rem;

  &:hover {
    /* using a tiny nonzero alpha in rgba as a workaround for fading to transparent without a gray midpoint */
    background: linear-gradient(0deg, currentcolor 0%, 15%, rgba(255,255,255,0.01) 100%);
  }

  &.unused {
    color: gray;
  }
  &.accepted {
    color: green;
  }
  &.warning {
    color: red;
  }
}

.download-button-row {
  text-align: center;
  padding: .7rem;
}

th:has(> .cmd-copy-buttons-container) {
  position: relative;
}
.cmd-copy-buttons-container {
  position: absolute;
  bottom: 0;
  right: 0;
  padding-right: 2px;
}
/* .cmd-copy-buttons-container:hover > button.cmd-copy-button,
.cmd-copy-buttons-container:has(:focus) > button.cmd-copy-button, */
tr:hover button.cmd-copy-button,
tr:has(:focus) button.cmd-copy-button,
.cmd-copy-container-icon:focus + button.cmd-copy-button,
button.cmd-copy-button:focus {
  display: inline-block;
}
button.cmd-copy-button {
  display: none;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  background-color: white;
  border-color: var(--dark);
  padding: 0 2px 0 2px;
  margin-left: 2px;
}

/* for testing only - the span is displaying the type of the property */
.editor-row:not(:hover) > .editor-items-container > .prop-type {
  display: none;
}
.prop-type {
  white-space: nowrap;
}

.clipboard-success-popover {
  color: var(--offwhite);
  background-color: darkgreen;
  /* border: 1px solid var(--dark); */
  border-width: 0px;
  border-radius: 2px;
  padding: 2px;
  font-size: 0.95em;
  pointer-events: none;
  opacity: 0;
  animation: 1s 1 linear fadeout;
}

@keyframes fadeout {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

/* .App {
  text-align: center;
} */

/* .App-logo {
  height: 40vmin;
  pointer-events: none;
} */

.popover {
  color: var(--dark);
  --popover-bg-color: var(--light);
  background-color: var(--popover-bg-color);
  /* background-color: color-mix(in srgb, var(--light) 80%, transparent); */
  /* border: 1px solid var(--light); */
  border-radius: 2px;
  padding: 3px;
  max-width: 25vw;
  opacity: 0.93;
  box-shadow: 0 0 0 0px var(--light);
  transition: opacity linear 0.05s,
              box-shadow linear 0.05s;
}
.popover.warning {
  color: var(--dark);
  --popover-bg-color: #ff8888;
}
.popover.unused {
  color: var(--dark);
  --popover-bg-color: var(--light);
  filter: grayscale(0.7);
}
.popover-clicked-open {
  opacity: 1;
  /* box-shadow: 0 0 0 1px var(--popover-bg-color); */
  box-shadow: 0 0 0 1px var(--accent);
}

@media (prefers-reduced-motion: no-preference) {
  /* .App-logo {
    animation: App-logo-spin infinite 20s linear;
  } */
  input[type="checkbox"].switch {
    transition: background-position .15s ease-in-out;
  }
  .propname-container:hover > .propname-fullkey {
    display: block;
  }
  .propname-fullkey {
    display: none;
  }
  /* summary svg.category-icon { */
    /* transition: transform .2s ease-in-out; */
  /* } */
  span.validation-ind:has(+ .validation-others-container) {
    transition: all .1s linear;
  }
  .validation-others-container {
    transition: all .1s linear;
  }
}

/* .App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
} */

/* .App-link {
  color: #61dafb;
} */

/* @keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
} */
